import asyncio
import requests
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command
from aiogram.enums import ChatType
from config import Config, load_config

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger(__name__)

config: Config = load_config()
BOT_TOKEN: str = config.tg_bot.token

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

ADMIN_ID = 219614301  # Telegram ID –º–µ–Ω–µ–¥–∂–µ—Ä–∞
survey_id_counter = 1  # ID –∞–Ω–∫–µ—Ç—ã, –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 1

questions = [
    "–í–∞—à–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—è",
    "–í–∞—à –Ω–∏–∫ –≤ Telegram (—á–µ—Ä–µ–∑ @)",
    "–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω –¥–ª—è —Å–≤—è–∑–∏",
    "–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞",
    "–í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä –Ω–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞—Ö (–µ—Å–ª–∏ –µ—Å—Ç—å)",
    "–ö–∞–∫–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞–º –Ω—É–∂–Ω–æ?",
    "–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞ (–∏–ª–∏ PDF, Excel-—Ñ–∞–π–ª)",
    "–ù–∞–ø–∏—à–∏—Ç–µ —Ä–∞–∑–º–µ—Ä—ã —Ç–æ–≤–∞—Ä–∞ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–∂–¥–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞",
    "–£–∫–∞–∂–∏—Ç–µ —Ü–≤–µ—Ç —Ç–æ–≤–∞—Ä–∞",
    "–£–∫–∞–∂–∏—Ç–µ, –Ω—É–∂–Ω—ã –ª–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã, –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã, –≤–∞–∂–Ω—ã–µ –¥–µ—Ç–∞–ª–∏).",
    "–ö–∞–∫–∞—è —É–ø–∞–∫–æ–≤–∫–∞ –Ω—É–∂–Ω–∞? (–µ—Å—Ç—å –ª–∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —É–ø–∞–∫–æ–≤–∫–∏ –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∑–∞—â–∏—Ç—ã?)",
    "–ë—Ä–µ–Ω–¥–∏–Ω–≥ (–Ω—É–∂–Ω–æ –ª–∏ –±—Ä–µ–Ω–¥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞, –µ—Å–ª–∏ –¥–∞, —É–∫–∞–∂–∏—Ç–µ –º–µ—Å—Ç–æ –∏ —Ä–∞–∑–º–µ—Ä)",
    "–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ä–æ–∫ –¥–æ—Å—Ç–∞–≤–∫–∏ (10-13, 15-18, 25-30 –¥–Ω–µ–π, –ê–≤–∏–∞)",
    "–ï—Å—Ç—å –ª–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Ç–æ—á–Ω–µ–Ω–∏—è?",
    "–ü–µ—Ä–µ—á–∏—Å–ª–∏—Ç–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å, —É–∫–∞–∂–∏—Ç–µ –∑–¥–µ—Å—å)"
]

user_answers = {}

faq = {
    "–¥–æ—Å—Ç–∞–≤–∫–∞": "–ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –¥–æ—Å—Ç–∞–≤–∫—É –∫–∞—Ä–≥–æ (10-13 –¥–Ω–µ–π, 15-18 –¥–Ω–µ–π, 25-30 –¥–Ω–µ–π) –∏ –∞–≤–∏–∞ (–æ—Ç 1 –¥–Ω—è). –ü–æ –±–µ–ª–æ–π –¥–æ—Å—Ç–∞–≤–∫–µ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –º–µ–Ω–µ–¥–∂–µ—Ä—É.",
    "–æ–±—Ä–µ—à–µ—Ç–∫–∞": "–°—Ç–æ–∏–º–æ—Å—Ç—å –æ–±—Ä–µ—à–µ—Ç–∫–∏ - 30$ –∑–∞ –º–µ—Ç—Ä –∫—É–±–∏—á–µ—Å–∫–∏–π.",
    "–æ–ø–ª–∞—Ç–∞": "–ú—ã –ø—Ä–∏–Ω–∏–º–∞–µ–º –æ–ø–ª–∞—Ç—É –∑–∞ –Ω–∞—à–∏ —É—Å–ª—É–≥–∏ –ø–æ –±–µ–∑–Ω–∞–ª–∏—á–Ω–æ–º—É —Ä–∞—Å—á–µ—Ç—É. –û–ø–ª–∞—Ç–∞ –∑–∞ —Ç–æ–≤–∞—Ä –∏ –ª–æ–≥–∏—Å—Ç–∏–∫—É —É—Ç–æ—á–Ω—è–µ—Ç—Å—è —É –º–µ–Ω–µ–¥–∂–µ—Ä–∞."
}

start_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É")],
        [KeyboardButton(text="–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã")],
        [KeyboardButton(text="–ù–∞–∑–∞–¥")]
    ],
    resize_keyboard=True
)

consent_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="‚úÖ –î–∞", callback_data="consent_yes")],
        [InlineKeyboardButton(text="‚ùå –ù–µ—Ç", callback_data="consent_no")],
        [InlineKeyboardButton(text="üìÑ –ü—Ä–æ—á–∏—Ç–∞—Ç—å –æ—Ñ–µ—Ä—Ç—É", callback_data="read_offer")]
    ]
)

delivery_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="10-13 –¥–Ω–µ–π", callback_data="10-13")],
        [InlineKeyboardButton(text="15-18 –¥–Ω–µ–π", callback_data="15-18")],
        [InlineKeyboardButton(text="25-30 –¥–Ω–µ–π", callback_data="25-30")],
        [InlineKeyboardButton(text="–ê–≤–∏–∞", callback_data="avia")]
    ]
)

@dp.message(Command("start"))
async def start(message: types.Message):
    logger.debug("–ö–æ–º–∞–Ω–¥–∞ /start –ø–æ–ª—É—á–µ–Ω–∞")
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É –≤–∞–º —Å –∑–∞–∫–∞–∑–æ–º. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=start_keyboard)

@dp.message(lambda message: message.text == "–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É")
async def ask_consent(message: types.Message):
    await message.answer(
        "–ü–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –∞–Ω–∫–µ—Ç—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–∞–π—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.",
        reply_markup=consent_keyboard
    )

@dp.callback_query(lambda call: call.data == "consent_yes")
async def consent_yes(call: types.CallbackQuery):
    global survey_id_counter
    chat_id = call.message.chat.id
    user_answers[chat_id] = {
        "id": survey_id_counter,
        "answers": []
    }
    survey_id_counter += 1
    await call.message.answer(f"üìù –í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ ID {user_answers[chat_id]['id']}.")
    await call.message.answer(questions[0])
    await call.answer()

@dp.callback_query(lambda call: call.data == "consent_no")
async def consent_no(call: types.CallbackQuery):
    await call.message.answer(
        "–ú—ã –Ω–µ —Å–æ–±–∏—Ä–∞–µ–º—Å—è –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –≤–∞—à–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º. –û–Ω–∏ –Ω—É–∂–Ω—ã —Ç–æ–ª—å–∫–æ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º.\n\n"
        "‚ùì –í—Å–µ —Ä–∞–≤–Ω–æ –Ω–µ —Å–æ–≥–ª–∞—Å–Ω—ã? –¢–æ–≥–¥–∞ –º—ã –ø—Ä–æ—Å–∏–º –≤–∞—Å —Å–≤—è–∑–∞—Ç—å—Å—è –Ω–∞–ø—Ä—è–º—É—é —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º: @your_manager"
    )
    await call.answer()

@dp.callback_query(lambda call: call.data == "read_offer")
async def send_offer(call: types.CallbackQuery):
    with open("offer.pdf", "rb") as file:
        await call.message.answer_document(file, caption="üìÑ –û—Ñ–µ—Ä—Ç–∞ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
    await call.answer()

@dp.callback_query()
async def delivery_selected(call: types.CallbackQuery):
    chat_id = call.message.chat.id
    if chat_id in user_answers:
        user_answers[chat_id]["answers"].append(call.data)
        await call.message.answer("‚úÖ –°—Ä–æ–∫ –¥–æ—Å—Ç–∞–≤–∫–∏ –≤—ã–±—Ä–∞–Ω. " + questions[len(user_answers[chat_id]['answers'])])
    await call.answer()

async def main():
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())
