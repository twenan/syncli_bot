import asyncio
import requests
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command
from aiogram.enums import ChatType
from config import Config, load_config


# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger(__name__)

config: Config = load_config()
BOT_TOKEN: str = config.tg_bot.token

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

ADMIN_ID = 219614301  # Telegram ID –º–µ–Ω–µ–¥–∂–µ—Ä–∞
survey_id_counter = 1  # ID –∞–Ω–∫–µ—Ç—ã, –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 1

# –í–æ–ø—Ä–æ—Å—ã –≤ –∞–Ω–∫–µ—Ç–µ
questions = [
    "–í–∞—à–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—è",
    "–í–∞—à –Ω–∏–∫ –≤ Telegram (—á–µ—Ä–µ–∑ @)",
    "–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω –¥–ª—è —Å–≤—è–∑–∏",
    "–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞",
    "–í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä –Ω–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞—Ö (–µ—Å–ª–∏ –µ—Å—Ç—å)",
    "–ö–∞–∫–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞–º –Ω—É–∂–Ω–æ?",
    "–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞ (–∏–ª–∏ PDF, Excel-—Ñ–∞–π–ª)",
    "–ù–∞–ø–∏—à–∏—Ç–µ —Ä–∞–∑–º–µ—Ä—ã —Ç–æ–≤–∞—Ä–∞ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–∂–¥–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞",
    "–£–∫–∞–∂–∏—Ç–µ —Ü–≤–µ—Ç —Ç–æ–≤–∞—Ä–∞",
    "–£–∫–∞–∂–∏—Ç–µ, –Ω—É–∂–Ω—ã –ª–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã, –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã, –≤–∞–∂–Ω—ã–µ –¥–µ—Ç–∞–ª–∏).",
    "–ö–∞–∫–∞—è —É–ø–∞–∫–æ–≤–∫–∞ –Ω—É–∂–Ω–∞? (–µ—Å—Ç—å –ª–∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —É–ø–∞–∫–æ–≤–∫–∏ –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∑–∞—â–∏—Ç—ã?)",
    "–ë—Ä–µ–Ω–¥–∏–Ω–≥ (–Ω—É–∂–Ω–æ –ª–∏ –±—Ä–µ–Ω–¥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞, –µ—Å–ª–∏ –¥–∞, —É–∫–∞–∂–∏—Ç–µ –º–µ—Å—Ç–æ –∏ —Ä–∞–∑–º–µ—Ä)",
    "–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ä–æ–∫ –¥–æ—Å—Ç–∞–≤–∫–∏ (10-13, 15-18, 25-30 –¥–Ω–µ–π, –ê–≤–∏–∞)",
    "–ï—Å—Ç—å –ª–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Ç–æ—á–Ω–µ–Ω–∏—è?",
    "–ü–µ—Ä–µ—á–∏—Å–ª–∏—Ç–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å, —É–∫–∞–∂–∏—Ç–µ –∑–¥–µ—Å—å)"
]

user_answers = {}

# –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã
faq = {
    "–¥–æ—Å—Ç–∞–≤–∫–∞": "–ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –¥–æ—Å—Ç–∞–≤–∫—É –∫–∞—Ä–≥–æ (10-13 –¥–Ω–µ–π, 15-18 –¥–Ω–µ–π, 25-30 –¥–Ω–µ–π) –∏ –∞–≤–∏–∞ (–æ—Ç 1 –¥–Ω—è). –ü–æ –±–µ–ª–æ–π –¥–æ—Å—Ç–∞–≤–∫–µ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –º–µ–Ω–µ–¥–∂–µ—Ä—É.",
    "–æ–±—Ä–µ—à–µ—Ç–∫–∞": "–°—Ç–æ–∏–º–æ—Å—Ç—å –æ–±—Ä–µ—à–µ—Ç–∫–∏ - 30$ –∑–∞ –º–µ—Ç—Ä –∫—É–±–∏—á–µ—Å–∫–∏–π.",
    "–æ–ø–ª–∞—Ç–∞": "–ú—ã –ø—Ä–∏–Ω–∏–º–∞–µ–º –æ–ø–ª–∞—Ç—É –∑–∞ –Ω–∞—à–∏ —É—Å–ª—É–≥–∏ –ø–æ –±–µ–∑–Ω–∞–ª–∏—á–Ω–æ–º—É —Ä–∞—Å—á–µ—Ç—É. –û–ø–ª–∞—Ç–∞ –∑–∞ —Ç–æ–≤–∞—Ä –∏ –ª–æ–≥–∏—Å—Ç–∏–∫—É —É—Ç–æ—á–Ω—è–µ—Ç—Å—è —É –º–µ–Ω–µ–¥–∂–µ—Ä–∞."
}

# –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
start_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É")],
        [KeyboardButton(text="–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã")],
        [KeyboardButton(text="–ù–∞–∑–∞–¥")]
    ],
    resize_keyboard=True
)

# üîπ **–ò–ù–ö–õ–ê–ô–ù-–ö–õ–ê–í–ò–ê–¢–£–†–ê –î–õ–Ø –û–§–ï–†–¢–´**
consent_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="‚úÖ –î–∞", callback_data="consent_yes")],
        [InlineKeyboardButton(text="‚ùå –ù–µ—Ç", callback_data="consent_no")],
        [InlineKeyboardButton(text="üìÑ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ñ–µ—Ä—Ç—É", callback_data="view_offer")]
    ]
)

# üîπ **–ò–ù–ö–õ–ê–ô–ù-–ö–õ–ê–í–ò–ê–¢–£–†–ê –î–õ–Ø –í–¢–û–†–û–ì–û –®–ê–ù–°–ê**
consent_second_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="‚úÖ –î–∞", callback_data="consent_yes")],
        [InlineKeyboardButton(text="‚ùå –ù–µ—Ç", callback_data="final_no")]
    ]
)

# –ò–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å—Ä–æ–∫–∞ –¥–æ—Å—Ç–∞–≤–∫–∏
delivery_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="10-13 –¥–Ω–µ–π", callback_data="10-13")],
        [InlineKeyboardButton(text="15-18 –¥–Ω–µ–π", callback_data="15-18")],
        [InlineKeyboardButton(text="25-30 –¥–Ω–µ–π", callback_data="25-30")],
        [InlineKeyboardButton(text="–ê–≤–∏–∞", callback_data="avia")]
    ]
)

# –°—Ç–∞—Ä—Ç –±–æ—Ç–∞
@dp.message(Command("start"))
async def start(message: types.Message):
    logger.debug("–ö–æ–º–∞–Ω–¥–∞ /start –ø–æ–ª—É—á–µ–Ω–∞")
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É –≤–∞–º —Å –∑–∞–∫–∞–∑–æ–º. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=start_keyboard)

    # üîπ **–ó–ê–ü–†–û–° –ù–ê –°–û–ì–õ–ê–°–ò–ï –ü–ï–†–ï–î –ê–ù–ö–ï–¢–û–ô**
@dp.message(lambda message: message.text == "–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É")
async def request_consent(message: types.Message):
    await message.answer(
        "–ü–µ—Ä–µ–¥ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ–º –∞–Ω–∫–µ—Ç—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–∞–π—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.",
        reply_markup=consent_keyboard
    )

# üîπ **–û–ë–†–ê–ë–û–¢–ö–ê –í–´–ë–û–†–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø (–î–ê / –ù–ï–¢ / –ü–û–°–ú–û–¢–†–ï–¢–¨ –û–§–ï–†–¢–£)**
@dp.callback_query(lambda call: call.data in ["consent_yes", "consent_no", "view_offer", "final_no"])
async def process_consent(call: types.CallbackQuery):
    chat_id = call.message.chat.id

    if call.data == "consent_yes":
        # –ù–∞—á–∏–Ω–∞–µ–º –∞–Ω–∫–µ—Ç—É
        global survey_id_counter
        user_answers[chat_id] = {
            "id": survey_id_counter,
            "answers": []
        }
        survey_id_counter += 1
        await call.message.edit_text(f"–°–ø–∞—Å–∏–±–æ –∑–∞ —Å–æ–≥–ª–∞—Å–∏–µ! üìù –í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ ID {user_answers[chat_id]['id']}.\n\n{questions[0]}")
    
    elif call.data == "view_offer":
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ñ–µ—Ä—Ç—É –∏ —Å–Ω–æ–≤–∞ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤—ã–±–æ—Ä
        await bot.send_document(chat_id, document=types.FSInputFile("/home/anna/syncli_bot/offer.pdf"), caption="üìÑ –û—Ñ–µ—Ä—Ç–∞ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
        await call.message.edit_text("–û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –¥–æ–∫—É–º–µ–Ω—Ç–æ–º –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç.", reply_markup=consent_keyboard)

    elif call.data == "consent_no":
        # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –µ—â–µ —Ä–∞–∑ –ø–æ–¥—É–º–∞—Ç—å
        await call.message.edit_text(
            "–ú—ã –Ω–µ –ø–µ—Ä–µ–¥–∞–µ–º –≤–∞—à–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º. "
            "–û–Ω–∏ –Ω—É–∂–Ω—ã —Ç–æ–ª—å–∫–æ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞. –í—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å?",
            reply_markup=consent_second_keyboard  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Ç–æ—Ä—É—é –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        )

    elif call.data == "final_no":
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–Ω–æ–≤–∞ –æ—Ç–∫–∞–∑–∞–ª—Å—è
        await call.message.edit_text(
            "–¢–æ–≥–¥–∞ —Å–≤—è–∂–∏—Ç–µ—Å—å –Ω–∞–ø—Ä—è–º—É—é —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º: @YourManagerTelegram",
            reply_markup=None  # –£–±–∏—Ä–∞–µ–º —Ç–æ–ª—å–∫–æ –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, –Ω–æ –º–µ–Ω—é –æ—Å—Ç–∞–µ—Ç—Å—è
        )

# üîπ **–°–ë–û–† –û–¢–í–ï–¢–û–í –í –ê–ù–ö–ï–¢–ï**
# **–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —É—á–∞—Å—Ç–æ–∫ –∫–æ–¥–∞: –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ –≤ –∞–Ω–∫–µ—Ç–µ**
@dp.message()
async def collect_answers_or_faq(message: types.Message):
    chat_id = message.chat.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∞–Ω–∫–µ—Ç—ã
    if chat_id in user_answers and "answers" in user_answers[chat_id]:
        user_answers[chat_id]["answers"].append(message.text)

        # –ï—Å–ª–∏ –µ—â–µ –æ—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã
        if len(user_answers[chat_id]["answers"]) < len(questions):
            await message.answer(questions[len(user_answers[chat_id]["answers"])])  # –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É
        else:
            # –û—Ç–ø—Ä–∞–≤–∫–∞ –∞–Ω–∫–µ—Ç—ã –º–µ–Ω–µ–¥–∂–µ—Ä—É
            answers_text = "\n".join([
                f"{questions[i]}: {answer}" if i != 6 else "–ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª"
                for i, answer in enumerate(user_answers[chat_id]["answers"])
            ])

            await bot.send_message(
                ADMIN_ID, 
                f"üì© –ù–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞ ID {user_answers[chat_id]['id']}:\n\n{answers_text}"
            )

            if len(user_answers[chat_id]["answers"]) > 6 and user_answers[chat_id]["answers"][6]:
                await bot.send_document(
                    ADMIN_ID, 
                    user_answers[chat_id]["answers"][6], 
                    caption=f"üìé –§–∞–π–ª –∫ –∞–Ω–∫–µ—Ç–µ ID {user_answers[chat_id]['id']}"
                )

            await message.answer("–°–ø–∞—Å–∏–±–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.")
            del user_answers[chat_id]  # –£–¥–∞–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∞–Ω–∫–µ—Ç—ã –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è

    else:
        await message.answer("–ß—Ç–æ–±—ã –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É, –Ω–∞–∂–º–∏—Ç–µ '–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É' –≤ –º–µ–Ω—é.")
        


# **–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã**
@dp.message(lambda message: message.text == "–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã")
async def show_faq(message: types.Message):
    chat_id = message.chat.id

     # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –∏ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é, —á—Ç–æ–±—ã –æ–Ω–∏ –Ω–µ –∑–∞—Å—á–∏—Ç—ã–≤–∞–ª–∏—Å—å –∫–∞–∫ –æ—Ç–≤–µ—Ç—ã –∞–Ω–∫–µ—Ç—ã
    if message.text in ["–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã", "–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É", "–ù–∞–∑–∞–¥"]:
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–ø–æ–ª–Ω—è–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–Ω–∫–µ—Ç—É
    if chat_id in user_answers and len(user_answers[chat_id]["answers"]) < len(questions):
        await message.answer(
            "‚ÑπÔ∏è –í—ã —Å–µ–π—á–∞—Å –∑–∞–ø–æ–ª–Ω—è–µ—Ç–µ –∞–Ω–∫–µ—Ç—É. –ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –≤–æ—Ç —Å–ø–∏—Å–æ–∫ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã—Ö:"
        )
      
    response = "üìå –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã:\n\n"
    for keyword, answer in faq.items():
        response += f"üëâ *{keyword.capitalize()}* - {answer}\n\n"

    response += "–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å, –∏ —è –ø–æ–ø—Ä–æ–±—É—é –æ—Ç–≤–µ—Ç–∏—Ç—å!"

    await message.answer(response, parse_mode="Markdown")


# **–ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –∞–¥–º–∏–Ω—É**
@dp.message(lambda message: message.photo or message.document)
async def handle_file(message: types.Message):
    chat_id = message.chat.id

    if chat_id in user_answers and len(user_answers[chat_id]["answers"]) == 6:
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Ñ–∞–π–ª–∞ (—Ñ–æ—Ç–æ –∏–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç)
        if message.photo:
            file_id = message.photo[-1].file_id
            file_type = "—Ñ–æ—Ç–æ"
        else:
            file_id = message.document.file_id
            file_type = "–¥–æ–∫—É–º–µ–Ω—Ç"

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º file_id –≤ –∞–Ω–∫–µ—Ç–µ
        user_answers[chat_id]["answers"].append(file_id)

        await message.answer(f"‚úÖ {file_type.capitalize()} –ø–æ–ª—É—á–µ–Ω–æ.\n\n{questions[len(user_answers[chat_id]['answers'])]}")

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞ –∞–¥–º–∏–Ω—É
        if file_type == "—Ñ–æ—Ç–æ":
            await bot.send_photo(ADMIN_ID, file_id, caption=f"üì∑ –§–æ—Ç–æ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞ (–∞–Ω–∫–µ—Ç–∞ ID {user_answers[chat_id]['id']})")
        else:
            await bot.send_document(ADMIN_ID, file_id, caption=f"üìé –§–∞–π–ª –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞ (–∞–Ω–∫–µ—Ç–∞ ID {user_answers[chat_id]['id']})")

    else:
        await message.answer("üìé –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∞–Ω–∫–µ—Ç—ã –ø–æ—Å–ª–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞.")

# –í—ã–±–æ—Ä —Å—Ä–æ–∫–∞ –¥–æ—Å—Ç–∞–≤–∫–∏
@dp.callback_query()
async def delivery_selected(call: types.CallbackQuery):
    chat_id = call.message.chat.id
    if chat_id in user_answers:
        user_answers[chat_id]["answers"].append(call.data)
        await call.message.answer("‚úÖ –°—Ä–æ–∫ –¥–æ—Å—Ç–∞–≤–∫–∏ –≤—ã–±—Ä–∞–Ω. " + questions[len(user_answers[chat_id]['answers'])])
    await call.answer()

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())
